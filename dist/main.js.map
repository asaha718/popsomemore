{"version":3,"sources":["webpack://popsomemore/./src/scripts/balloon.js","webpack://popsomemore/./src/scripts/player.js","webpack://popsomemore/./src/scripts/projectile.js","webpack://popsomemore/./src/scripts/game.js","webpack://popsomemore/./src/index.js"],"names":["Balloon","x","y","type","speedX","speedY","r","this","c_width","c_height","speed","maxSpeed","moveLeft","moveUp","gameOver","ctx","beginPath","arc","Math","PI","fillStyle","fill","closePath","moveBalloon","drawBalloon","Player","dimensions","iconX","width","iconY","height","rightPressed","leftPressed","fillRect","key","drawPlayer","Projectile","pos_x","pos_y","fired","strokeStyle","lineWidth","stroke","drawProjectile","Projectiles","Balloons","spawnX","spawnY","spawnMini","shoot","leftBtn","document","querySelector","rightBtn","spaceBtn","PopSomeMore","canvas","getContext","firstBalloonSpawnX","firstBalloonSpawnY","player","balloons","push","getRndInteger","projectiles","registerEvents","spawnBalloon","score","level","addEventListener","keyDownHandler","bind","keyUpHandler","e","movePlayer","style","backgroundColor","code","reset","stopPlayer","x1","x2","y1","y2","r1","r2","dsx","dsy","sqrt","doubleBalloon","font","fillText","clearRect","drawEndMsg","drawScore","drawLevel","length","forEach","balloon","i","arr","projectile","j","arr2","animate","collisionDetection","splice","AddNewBalloons","moveProjectile","requestAnimationFrame","num","balloonSpawnX","min","max","floor","random","openingScreen","game","getElementById","window","onkeydown","keyCode","display"],"mappings":"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","file":"main.js","sourcesContent":["// const CONSTANTS= { \n//     DX: getRndInteger(0.5,3.5), \n//     DY: getRndInteger(0.5,3.5)\n// }\n\nexport default class Balloon{ \n    constructor(x, y, type ,speedX,speedY,r = 68){ \n        // this.dimensions= dimensions; \n        this.x = x; \n        this.y = y;\n        this.c_width= 480; \n        this.c_height= 620; \n        this.r= r; \n        // this.width = width;\n        // this.height = height;\n        // this.image = new Image();\n        // this.image.src = src\n        this.type= type;\n        this.speed= 2; \n        this.speedX =speedX \n        this.speedY = speedY\n        this.maxSpeed = 1.3\n        this.moveLeft= false;   \n        this.moveUp= false;  \n        this.gameOver=false\n      \n    }\n\n\n    drawBalloon(ctx){\n        // ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height); \n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.r, 0, Math.PI*2);\n        ctx.fillStyle = \"#c47de8\";\n        ctx.fill();\n        ctx.closePath(); \n    }\n\n    moveBalloon(){ \n        if(this.x + this.r >= this.c_width || this.x  <=  this.r) {\n            this.speedX = -1 * this.speedX;\n        }\n        if(this.y  <=  this.r) {\n            this.speedY = -1 * this.speedY;\n        }else if (this.y + this.r >= this.c_height){ \n            this.gameOver = true;\n        }\n        if(this.type == 'firstBalloon')\n        {\n          \n            this.x += this.speedX;  \n            this.y += this.speedY;\n        }else{\n            if(this.type == 'mini-balloon-left')\n            {\n                this.x -= this.speedX;  \n                this.y += this.speedY;\n            }\n            else{\n                this.x += this.speedX;  \n                this.y += this.speedY;\n            }\n        }\n      \n    }\n\n    animate(ctx){\n        this.moveBalloon(); \n        this.drawBalloon(ctx);\n    } \n} \n\n","const CONSTANTS= { \n    PLAYER_WIDTH: 15, \n    PLAYER_HEIGHT: 45, \n}; \n\nexport default class Player{ \n    constructor(dimensions){ \n        this.dimensions= dimensions\n        this.iconX=(this.dimensions.width - CONSTANTS.PLAYER_WIDTH)/2; \n        this.iconY= this.dimensions.height - CONSTANTS.PLAYER_HEIGHT;\n        this.rightPressed = false;\n        this.leftPressed = false; \n    }\n\n    drawPlayer(ctx){ \n        ctx.beginPath() \n        ctx.fillRect(this.iconX, \n            this.iconY, \n            CONSTANTS.PLAYER_WIDTH, \n            CONSTANTS.PLAYER_HEIGHT\n        )\n        ctx.fillStyle = \"#0095DD\";\n        ctx.fill();\n        ctx.closePath();\n\n        if(this.rightPressed) {\n            this.iconX += 7;\n            if (this.iconX + CONSTANTS.PLAYER_WIDTH > this.dimensions.width){\n                this.iconX = this.dimensions.width - CONSTANTS.PLAYER_WIDTH;\n            }\n        }\n        else if(this.leftPressed) {\n            this.iconX -= 7;\n            if (this.iconX < 0){\n                this.iconX = 0;\n            }\n        }\n    }\n\n    movePlayer(key){ \n        if(key === \"Right\" || key === \"ArrowRight\"){ \n            this.rightPressed = true\n        } else if ( key=== \"Left\" || key === \"ArrowLeft\"){ \n            this.leftPressed = true\n        }\n    }\n\n    stopPlayer(){ \n        this.rightPressed = false; \n        this.leftPressed = false; \n    }\n\n    animate(ctx){ \n        this.drawPlayer(ctx); \n    }\n}","const CONSTANTS= { \n    RADIUS: 2 \n}\n\nexport default class Projectile{ \n    constructor(pos_x, pos_y,type){ \n        this.pos_x= pos_x; \n        this.pos_y= pos_y;\n        this.fired= false;\n        this.type = type   \n    }\n\n    drawProjectile(ctx, x, y){ \n        ctx.strokeStyle = \"#000\";\n        ctx.beginPath();\n        ctx.arc(this.pos_x, this.pos_y, CONSTANTS.RADIUS, 0, 2 * Math.PI);\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = \"red\";\n        ctx.stroke();\n\n        // if (this.fired){ \n        //     this.pos_y -= 5\n        //     if(this.pos_y <= 0){ \n        //         // this.pos_x= x; \n        //         // this.pos_y= y;\n        //         this.fired= false;  \n        //     }\n        // }else{\n        //     this.pos_x= x; \n        //     this.pos_y= y; \n        // } \n            \n    }\n\n    moveProjectile(){ \n        this.pos_y -= 5\n    }\n\n\n    animate(ctx, x, y){ \n        this.drawProjectile(ctx, x, y)\n    }\n}","import Balloon from \"./balloon\";\nimport Player from \"./player\";\nimport Projectile from \"./projectile\";\n\nlet Projectiles = [];\nlet Balloons = [];\nlet spawnX = 0;\nlet spawnY = 0;\nlet spawnMini = false;\nlet shoot = false;\nlet levelIncrease = false;\nlet gameOver = false;\nlet startScreen = true;\n\n//selectors;\nconst leftBtn = document.querySelector(\".left\");\nconst rightBtn = document.querySelector(\".right\");\nconst spaceBtn = document.querySelector(\".space\");\n\nexport default class PopSomeMore {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.dimensions = { width: canvas.width, height: canvas.height };\n    this.firstBalloonSpawnX = this.dimensions.width / 2;\n    this.firstBalloonSpawnY = 80;\n    this.player = new Player(this.dimensions);\n    this.balloons = Balloons.push(\n      new Balloon(\n        this.firstBalloonSpawnX,\n        this.firstBalloonSpawnY,\n        \"firstBalloon\",\n        getRndInteger(0.5, 0.9),\n        getRndInteger(0.5, 0.9)\n      )\n    ); // create array of balloon instances\n    this.projectiles = Projectiles.push(\n      new Projectile(this.player.iconX, this.player.iconY, \"firstProjectile\")\n    );\n    this.registerEvents();\n    this.spawnBalloon = false;\n    this.score = 0;\n    this.level = 1;\n    // this.startScreen = true;\n\n    // this.collision= false\n  }\n\n  registerEvents() {\n    document.addEventListener(\"keydown\", this.keyDownHandler.bind(this), false);\n    document.addEventListener(\"keyup\", this.keyUpHandler.bind(this), false);\n  }\n\n  keyDownHandler(e) {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") {\n      this.player.movePlayer(e.key);\n      rightBtn.style.backgroundColor = \"#bea0da\";\n    } else if (e.key === \"Left\" || e.key === \"ArrowLeft\") {\n      this.player.movePlayer(e.key);\n      leftBtn.style.backgroundColor = \"#bea0da\";\n    } else if (e.code === \"Space\") {\n      shoot = true;\n      spaceBtn.style.backgroundColor = \"#bea0da\";\n    } else if (e.code === \"Enter\") {\n      if (gameOver) {\n        this.reset();\n        gameOver = false;\n        return;\n      } else {\n        return;\n      }\n    }\n  }\n\n  keyUpHandler(e) {\n    if (e.key === \"Right\" || e.key === \"ArrowRight\") {\n      this.player.stopPlayer();\n      rightBtn.style.backgroundColor = \"blueviolet\";\n    } else if (e.key === \"Left\" || e.key === \"ArrowLeft\") {\n      this.player.stopPlayer();\n      leftBtn.style.backgroundColor = \"blueviolet\";\n    } else if (e.code === \"Space\") {\n      shoot = false;\n      spaceBtn.style.backgroundColor = \"blueviolet\";\n    }\n  }\n\n  collisionDetection(x1, x2, y1, y2, r1, r2) {\n    let dsx = x2 - x1;\n    let dsy = y2 - y1;\n    let distance = Math.sqrt(dsx * dsx + dsy * dsy);\n    if (distance < r1 + r2) {\n      this.score++;\n      spawnX = x1;\n      spawnY = y1;\n\n      if (spawnMini) {\n        this.doubleBalloon();\n        spawnMini = false;\n      }\n      return true;\n\n    } else {\n      return false;\n    }\n  }\n\n  doubleBalloon() {\n    Balloons.push(\n      new Balloon(\n        spawnX,\n        spawnY,\n        \"mini-balloon-right\",\n        getRndInteger(0.5, 0.9),\n        getRndInteger(0.5, 0.9),\n        34\n      )\n    );\n    Balloons.push(\n      new Balloon(\n        spawnX,\n        spawnY,\n        \"mini-balloon-left\",\n        getRndInteger(0.5, 0.9),\n        getRndInteger(0.5, 0.9),\n        34\n      )\n    );\n  }\n\n  drawScore() {\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fillText(\"Score: \" + this.score, 8, 20);\n  }\n\n  drawEndMsg() {\n    this.ctx.font = \"25px Arial\";\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fillText(\n      \"GAME OVER\",\n      this.dimensions.width / 2 - 78,\n      this.dimensions.height / 4\n    );\n    this.ctx.fillText(\n      \"Click Enter to Play Again\",\n      this.dimensions.width / 2 - 140,\n      this.dimensions.height / 2\n    );\n  }\n\n  drawLevel() {\n    this.ctx.font = \"16px Arial\";\n    this.ctx.fillStyle = \"#0095DD\";\n    this.ctx.fillText(\"Level: \" + this.level, this.dimensions.width - 100, 20);\n  }\n\n  reset() {\n    this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n    Projectiles = [];\n    Balloons = [];\n    this.balloons = Balloons.push(\n      new Balloon(\n        this.firstBalloonSpawnX,\n        this.firstBalloonSpawnY,\n        \"firstBalloon\",\n        getRndInteger(0.5, 0.9),\n        getRndInteger(0.5, 0.9)\n      )\n    );\n    this.projectiles = Projectiles.push(\n      new Projectile(this.player.iconX, this.player.iconY, \"firstProjectile\")\n    );\n    this.firstBalloonSpawnX = this.dimensions.width / 2;\n    this.firstBalloonSpawnY = 80;\n    this.spawnBalloon = false;\n    this.score = 0;\n    this.level = 1;\n  }\n\n  animate() {\n    if (gameOver) {\n      this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n      this.drawEndMsg();\n      this.drawScore();\n      this.drawLevel();\n      return;\n    }\n\n    this.ctx.clearRect(0, 0, this.dimensions.width, this.dimensions.height);\n\n    if (Projectiles.length != 0 && Balloons.length != 0) {\n      Balloons.forEach((balloon, i, arr) => {\n        Projectiles.forEach((projectile, j, arr2) => {\n          balloon.animate(this.ctx);\n\n          if (balloon.type == \"firstBalloon\") spawnMini = true;\n          if (\n            balloon.type == \"mini-balloon-left\" ||\n            balloon.type == \"mini-balloon-right\"\n          )\n            spawnMini = false;\n\n          if (\n            this.collisionDetection(\n              balloon.x,\n              projectile.pos_x,\n              balloon.y,\n              projectile.pos_y,\n              balloon.r,\n              2\n            )\n          ) {\n            arr.splice(i, 1);\n            i--;\n            arr2.splice(j, 1);\n            j--;\n          }\n        });\n      });\n    }\n\n    if (Balloons.length == 0) {\n      if (!gameOver) {\n        this.level++;\n      }\n      if (this.level == 2) {\n        this.AddNewBalloons(2);\n      }\n      if (this.level == 3) {\n        this.AddNewBalloons(3);\n      }\n    }\n\n    Balloons.forEach((balloon) => {\n      if (balloon.gameOver == true) {\n        gameOver = true;\n      }\n    });\n\n    if (shoot) {\n      Projectiles.push(\n        new Projectile(this.player.iconX, this.player.iconY, \"missile\")\n      );\n      shoot = false;\n    }\n\n    if (Projectiles.length != 0) {\n      Projectiles.forEach((projectile) => {\n        if (projectile.type == \"missile\") {\n          projectile.moveProjectile();\n          projectile.animate(this.ctx, this.player.x, this.player.y);\n        }\n      });\n    }\n\n    this.drawScore();\n    this.drawLevel();\n\n    this.player.animate(this.ctx);\n    requestAnimationFrame(this.animate.bind(this));\n  }\n  AddNewBalloons(num) {\n    for (let i = 0; i < num; i++) {\n      let balloonSpawnX = getRndInteger(0, this.dimensions.width);\n      Balloons.push(\n        new Balloon(\n          balloonSpawnX,\n          this.firstBalloonSpawnY,\n          \"firstBalloon\",\n          getRndInteger(0.5, 0.9),\n          getRndInteger(0.5, 0.9)\n        )\n      );\n    }\n  }\n}\n\nfunction getRndInteger(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n","import PopSomeMore from \"./scripts/game\";\nimport \"./styles/index.css\";\nconst openingScreen = document.querySelector(\"#opening\");\nconst canvas = document.getElementById(\"balloon-game\");\nconst game = new PopSomeMore(canvas);\n\nwindow.onkeydown = function (e) {\n  if (e.keyCode === 13) { //click enter to start\n    openingScreen.style.display = \"none\";\n    game.animate();\n  }\n};\n"],"sourceRoot":""}